# The names of the modules to compile (separated by a space character)
gwt.module=org.opevel.Listings

# Folder within the web app context path where the output
# of the GWT module compilation will be stored.
# This setting is only used for GWT 1.5. For newer versions please use
# the rename-to attribute in the GWT module file (.gwt.xml).
gwt.output.dir=/org.opevel.Listings

# Script output style: OBF[USCATED], PRETTY, or DETAILED
gwt.compiler.output.style=OBFUSCATED

# Additional JVM arguments for the GWT compiler
gwt.compiler.jvmargs=-Xmx312M

# Specifies the number of local workers to use whe compiling permutations and module(s)
gwt.compiler.local.workers=1

# The level of logging detail: ERROR, WARN, INFO, TRACE, DEBUG,
gwt.compiler.logLevel=WARN

# Script output style: OBF[USCATED], PRETTY, or DETAILED
gwt.shell.output.style=PRETTY

# The level of logging detail: ERROR, WARN, INFO, TRACE, DEBUG,
gwt.shell.logLevel=WARN

# Additional JVM arguments for the GWT shell/GWT hosted mode (GWT 1.6)
# Add -d32 here and use at least GWT 1.7.1 to debug on a Mac
# (32-bit JRE is required by GWT for debugging)
gwt.shell.jvmargs=-Xmx312M

# GWT version: 1.5,1.6,1.7 or 2.0
gwt.version=2.0

# GWT 2.0 only
# Specifies the TCP port for the code server
gwt.shell.code.server.port=9997

# GWT 2.0 only
# Specifies the TCP port for the embedded web server
gwt.shell.port=8888

# Additional GWT compiler arguments
# GWT 2.0 compiler supports these:
#  -workDir                The compiler's working directory for internal use (must be writeable; defaults to a system temp dir)
#  -gen                    Debugging: causes normally-transient generated types to be saved in the specified directory
#  -ea                     Debugging: causes the compiled output to check assert statements
#  -XdisableClassMetadata  EXPERIMENTAL: Disables some java.lang.Class methods (e.g. getName())
#  -XdisableCastChecking   EXPERIMENTAL: Disables run-time checking of cast operations
#  -validateOnly           Validate all source code, but do not compile
#  -draftCompile           Enable faster, but less-optimized, compilations
#  -compileReport          Create a compile report that tells the Story of Your Compile
#  -localWorkers           The number of local workers to use when compiling permutations
#  -extra                  The directory into which extra files, not intended for deployment, will be written
gwt.compiler.args=

# Additional JVM arguments for JUnit tests
#JUnitShell [-port port-number | "auto"] [-whitelist whitelist-string] [-blacklist blacklist-string] [-logdir directory] [-logLevel level] [-gen dir] [-codeServerPort port-number | "auto"] [-war dir] [-extra dir] [-workDir dir] [-style style] [-ea] [-XdisableClassMetadata] [-XdisableCastChecking] [-draftCompile] [-localWorkers count] [-prod] [-testMethodTimeout minutes] [-testBeginTimeout minutes] [-runStyle runstyle[:args]] [-notHeadless] [-standardsMode] [-Xtries 1] [-userAgents userAgents]
#where
#  -port                   Specifies the TCP port for the embedded web server (defaults to 8888)
#  -whitelist              Allows the user to browse URLs that match the specified regexes (comma or space separated)
#  -blacklist              Prevents the user browsing URLs that match the specified regexes (comma or space separated)
#  -logdir                 Logs to a file in the given directory, as well as graphically
#  -logLevel               The level of logging detail: ERROR, WARN, INFO, TRACE, DEBUG, SPAM, or ALL
#  -gen                    Debugging: causes normally-transient generated types to be saved in the specified directory
#  -codeServerPort         Specifies the TCP port for the code server (defaults to 9997)
#  -war                    The directory into which deployable output files will be written (defaults to 'war')
#  -extra                  The directory into which extra files, not intended for deployment, will be written
#  -workDir                The compiler's working directory for internal use (must be writeable; defaults to a system temp dir)
#  -style                  Script output style: OBF[USCATED], PRETTY, or DETAILED (defaults to OBF)
#  -ea                     Debugging: causes the compiled output to check assert statements
#  -XdisableClassMetadata  EXPERIMENTAL: Disables some java.lang.Class methods (e.g. getName())
#  -XdisableCastChecking   EXPERIMENTAL: Disables run-time checking of cast operations
#  -draftCompile           Enable faster, but less-optimized, compilations
#  -localWorkers           The number of local workers to use when compiling permutations
#  -prod                   Causes your test to run in production (compiled) mode (defaults to development mode)
#  -testMethodTimeout      Set the test method timeout, in minutes
#  -testBeginTimeout       Set the test begin timeout (time for clients to contact server), in minutes
#  -runStyle               Selects the runstyle to use for this test.  The name is a suffix of com.google.gwt.junit.RunStyle or is a fully qualified class name, and may be followed with a colon and an argument for this runstyle.  The specified class mustextend RunStyle.
#  -notHeadless            Causes the log window and browser windows to be displayed; useful for debugging
#  -standardsMode          Use CSS standards mode (rather than quirks mode) for the hosting page
#  -Xtries                 EXPERIMENTAL: Sets the maximum number of attempts for running each test method
#  -userAgents             Specify the user agents to reduce the number of permutations for remote browser tests; e.g. ie6,ie8,safari,gecko1_8,opera

# run unit test in production mode using JUnit TestRunner
#gwt.test.jvmargs=-Xmx256M -Dgwt.args="-prod"
#gwt.test.jvmargs=-Xmx256M -Dgwt.args="-help"
gwt.test.jvmargs=-Xmx256M -Dgwt.args="-testBeginTimeout 5" -Dgwt.args="-prod" -Dgwt.args="-runStyle Manual:1"

# Additional arguments for the GWT shell
# e.g. -bindAddress 0.0.0.0 since GWT 2.0.1
gwt.shell.args=-javaagent:"D:\\appengine-java-sdk-1.5.0.1\\lib\\agent\\appengine-agent.jar"

# Java executable that should be used for the GWT Dev mode
# This can be used to choose a 32-bit JVM on a 64-bit OS
# (32-bit JVM is required by GWT for debugging before GWT 2.0)
# Leave the value empty if the default JVM should be used.
gwt.shell.java=
